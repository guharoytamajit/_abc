version: '3'

services:
    jenkins:
        container_name: jenkins
        build:
          context: ./jenkins-docker
        ports:
          - "8080:8080"
          - "50000:50000"          
        networks:
            my_net:
                ipv4_address: 172.30.1.1
        volumes:
          - /var/run/docker.sock:/var/run/docker.sock
          - /home/tamajit/tmp/jenkins:/var/jenkins_home              

    slave1:
        container_name: slave1
        build:
          context: ./jenkins-slave
        tty: true  
        networks:
            my_net:
                ipv4_address: 172.30.1.2
                

#Note :                
#Because SonarQube uses an embedded Elasticsearch, make sure that your Docker host configuration complies with the Elasticsearch production mode requirements and File Descriptors configuration.
#For example, on Linux, you can set the recommended values for the current session by running the following commands as root on the host:
#>sudo sysctl -w vm.max_map_count=262144
#>sudo sysctl -w fs.file-max=65536
#> ulimit -n 65536
#> ulimit -u 4096 
                
    postgres:
       image: postgres:9.6
       networks:
           my_net:
              ipv4_address: 172.30.1.3
       environment:
          POSTGRES_USER: sonar
          POSTGRES_PASSWORD: sonarpasswd
       volumes:
         - /home/tamajit/tmp/postgres:/var/lib/postgresql/data
    sonarqube:
       image: sonarqube:lts
       ports:
         - "9000:9000"
         - "9092:9092"
       networks:
           my_net:
               ipv4_address: 172.30.1.4
       environment:
         SONARQUBE_JDBC_USERNAME: sonar
         SONARQUBE_JDBC_PASSWORD: sonarpasswd
         SONARQUBE_JDBC_URL: "jdbc:postgresql://postgres:5432/sonar"
       volumes:
          - /home/tamajit/tmp/sonar/sonarqube_data:/opt/sonarqube/data
          - /home/tamajit/tmp/sonar/sonarqube_extensions:/opt/sonarqube/extensions
          - /home/tamajit/tmp/sonar/sonarqube_logs:/opt/sonarqube/logs        
       depends_on: 
         - postgres                


networks:
    my_net:
        ipam:
            driver: default
            config:
                - subnet: 172.30.0.0/16

