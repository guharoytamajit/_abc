helm3 create test-chart
------------------------------------------------------------------------------------------------------------------------------
Add repo:
helm3 repo add bitnami https://charts.bitnami.com/bitnami

List Repo:
helm3 repo list

-----------------------------------------------------------------------------------------------------------------------------
View All Kubernetes Manifest(yaml) files:

helm3 template  --release-name my-release test-chart>template.yaml
helm3 template  --release-name my-release --set autoscaling.enabled=true  test-chart >template.yaml
helm3 template  --release-name my-release --set autoscaling.enabled=true,ingress.enabled=true  test-chart >template.yaml

helm3 template  --release-name my-release  -f test-values.yaml  test-chart >template.yaml

---test-values.yaml-------
autoscaling:
    enabled: true
ingress:
    enabled: true


helm3 template  --release-name my-release  -f test-values.yaml,test-values-override.yaml  test-chart   #if multiple values files passed and same property provided,the later file will override values


---test-values-override.yaml -------
ingress:
    enabled: false


test templete of a single manifest file:
>helm3 template release_name mychart -s template/service.yaml



>helm install mychart --debug --dry-run  2>&1|less
----------------------------------------------------------------------------------------------------------------------------
>helm3 search repo jenkins
NAME            CHART VERSION   APP VERSION     DESCRIPTION                                       
bitnami/jenkins 5.0.18          2.235.1         The leading open source automation server         
stable/jenkins  1.18.1          lts             Open source continuous integration server. It s...

list all available versios of a chart:
>helm3 search  repo -l stable/jenkins


------------------------------------------------------------------------------------------------------------------------------
Download a chart:
fetch,pull=> Download a chart from a repository and (optionally) unpack it in local directory

>helm3 pull bitnami/jenkins  //download tar
>tar -xzf  jenkins-5.0.18.tgz          //extract tar 

>helm3 pull --version "0.1.1"  bitnami/elasticsearch

 
>helm3 pull --untar  bitnami/jenkins   //download and extract

Download a particular version of helm chart:
>helm3 pull  stable/jenkins  --version 0.1.4


------------------------------------------------------------------------------------------------------------------------------
helm inspect chart bitnami/jenkins      #print chart.yaml from chart repo
helm inspect values  bitnami/jenkins    #print values.yaml from chart repo
helm inspect readme  bitnami/jenkins    #print README from chart repo

--------------------------------------------------------------------------------------------------------------------------
Install Chart:
Install from remote repo
>helm3 install kubeapps-release --namespace kubeapps bitnami/kubeapps

Download repo locally then install(recommended if you later want to update chart.yaml or manifest files and create new release revision):
>helm3 pull  stable/jenkins  --version 0.1.4 --untar
>helm3 install my-release  jenkins --namespace jenkins [--dry-run] 

>helm3 list --namespace jenkins
>helm3 list -A      #list all namespace
>helm3 status --namespace jenkins my-release   //status of all deployed kubernetes objects

Upgrade after making changes on jenkins chart's deployment image version and chart.yaml apiVersion:
>helm3 upgrade my-release --namespace jenkins   jenkins
>helm3 upgrade my-release --namespace jenkins -f jenkins-override.yaml  [--set  a=b]   jenkins

>helm3 list  --namespace jenkins #Now it will show revision=2 for release my-release 
>helm3 status --namespace jenkins my-release   //status of all deployed kubernetes objects

>helm3 rollback  --namespace jenkins  my-release 1   #rollback to  revision 1 from revision 2 of my-release, but it will create revision 3 with same content as revision 1 .

>helm3 history  --namespace jenkins my-release 
>helm3 status --namespace jenkins my-release  [--revision int ]

>helm delete --namespace jenkins  my-release [--dry-run]
-------------------------------------------------------------------------------------------------------------------------
get => Download a named release
  
print user supplied values(ie. using --set or -f):
>helm3 get  values --namespace jenkins   --revision 1  my-release

print complete values.yaml:
>helm3 get  values --namespace jenkins   -a  --revision 1 my-release

>helm3 get  manifest  --namespace jenkins   --revision 1  my-release


helm3 get  all --namespace jenkins   --revision 3  my-release
