kops is most common tool for deploying k8s cluster in aws

kops:
can deploy cluster
can update cluster
It works completely on DNS for identification



steps:
create an ec2 instance =>  t2.micro with ubuntu


Install kubectl(https://kubernetes.io/docs/tasks/tools/install-kubectl/):
sudo apt-get update && sudo apt-get install -y apt-transport-https
curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
echo "deb https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee -a /etc/apt/sources.list.d/kubernetes.list
sudo apt-get update
sudo apt-get install -y kubectl

download kops:
>wget https://github.com/kubernetes/kops/releases/download/v1.16.0/kops-linux-amd64

create a role for our ec2 instance(permission to create additional ec2 instances)
IAM/Roles create
Aws service>ec2 give admin access to ec2(AsministratorAccess)
give a role name eg.kubernetes
It actually needs to access ec2,s3 and route53


Attach the new role to ec2:
goto instances>actions>instance settings>attach/replace iam role(here add our created role)


create a s3 bucket and add its location to ec2 enc variable 
>export KOPS_STATE_STORE=s3://clusters.cloudportal.com

Initialize cluster(Inside ec2 create cluster configuration files)
>kops create cluster --zone=ap-southeast-1a coudportal.com

Create actual cluster(from config files generated before)
>kops update cluster coudportal.com --yes   

master and worker nodes will be created.

>kops get cluster

Edit worker nodes
>kops edit ig --name=cloudportal.com nodes


Edit master nodes:
>kops edit ig  --name=cloudportal.com   master-ap-southeast-1a

validate cluster:
>kops validate cluster 

to autoscaling group for master and worker is created,we can update config file and apply changes using "kops update cluster coudportal.com --yes"


