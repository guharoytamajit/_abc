





if No max heap size is specified "-Xmx" vm arguement. eg. -Xmx50m
java 7,8,9 will use upto 1/4 of the host RAM as its max heap

The problem with this if our node is 40 GB ,jvm process will use heap size upto 10GB which is very large.
This also means regardless of the size of our node,we might only get 4 containers.

Java is container friendly starting from java 10.Which has more sensible defaults.

a small spring boot app can run good with max heap size of 50MB, but we need to do some profiling before setting a good value for our app.

use "kubectl top pod" to see how much memory java containers are using,it may use more memory than the max heeap size because java process requires memory other than heap as well.
After seeing "kubectl top pod" response and do some load testing we will get a good value for Resource Requests and Limits to be set for container.
 

-----------------
Why would you want to limit the amount of memory Java uses? Two reasons.

Firstly, Java's automatic memory management tends to grab as much memory from the operating system as possible, and then manage it for the benefit of the program. If you are running other programs on the same machine as your Java program, then it will grab more than its fair share of memory, putting pressure on them. If you are running multiple copies of your Java program, they will compete with each other, and you may end up with some instances being starved of memory. Putting a cap on the heap size lets you manage this - if you have 32 GB of RAM, and are running four processes, you can limit each heap to about 8 GB (a bit less would be better), and be confident they will all get the right amount of memory.

Secondly (another aspect of the first, really), if a process grabs more memory than the operating system can supply from physical memory, it uses virtual memory, which gets paged out to disk. This is very slow. Java can reduce its memory usage by making its garbage collector work harder. This is also slow - but not as slow as going to disk. So, you can limit the heap size to avoid the Java process being paged, and so improve performance.
---------------------
