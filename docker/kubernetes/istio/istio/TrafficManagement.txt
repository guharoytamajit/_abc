Note:
before applying an istio yaml validate it
>istioctl validate -f abc.yaml 



kind: VirtualService
apiVersion: networking.istio.io/v1alpha3
metadata:
  name: a-set-of-routing-rules-we-can-call-this-anything                                        # "just" a name for this virtualservice
  namespace: default
spec:
  hosts:                                                                                                             # which incoming host are we applying the proxy rules to???
    - fleetman-staff-service.default.svc.cluster.local                                              # The Service DNS (ie the regular K8S Service) name that we're applying routing rules to.
  http:
    - route:
        - destination:
            host: fleetman-staff-service.default.svc.cluster.local                                # The Target DNS name
            subset: safe-group                                                                                # The name defined in the DestinationRule
          weight: 90
        - destination:
            host: fleetman-staff-service.default.svc.cluster.local                                # The Target DNS name
            subset: risky-group                                                                                # The name defined in the DestinationRule
          weight: 10
---
kind: DestinationRule                                                                                         # Defining which pods should be part of each subset
apiVersion: networking.istio.io/v1alpha3
metadata:
  name: grouping-rules-for-our-photograph-canary-release                                   # This can be anything you like.
  namespace: default
spec:
  host: fleetman-staff-service                                                                             # Service
  trafficPolicy: ~
  subsets:
    - labels:                                                                                                        # SELECTOR.
        version: safe                                                                                             # find pods with label "safe"
      name: safe-group
    - labels:
        version: risky
      name: risky-group

==================================================================
apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: ingress-gateway-configuration
spec:
  selector:
    istio: ingressgateway                               # use Istio default gateway implementation(it's  pod has the same label)
  servers:
  - port:
      number: 80
      name: http
      protocol: HTTP
    hosts:
    - "*"                                                    # Domain name of the external website
---
kind: VirtualService
apiVersion: networking.istio.io/v1alpha3
metadata:
  name: fleetman-webapp
  namespace: default
spec:
  hosts:                                                    # which incoming host are we applying the proxy rules to???
    - "*"                                                     # Copy the value in the gateway hosts - usually a Domain Name
  gateways:
    - ingress-gateway-configuration
  http:
  - match:                                                # This is a LIST
    - uri:                                                   # IF
        prefix: "/experimental"
    - uri:                                                  # OR
        prefix: "/canary"

    route:                                                # THEN
    - destination:
        host: fleetman-webapp
        subset: experimental
  - match:
    - uri:
        prefix: "/"
    route:
    - destination:
        host: fleetman-webapp
        subset: original
---
kind: DestinationRule
apiVersion: networking.istio.io/v1alpha3
metadata:
  name: fleetman-webapp
  namespace: default
spec:
  host: fleetman-webapp
  subsets:
    - labels:
        version: original
      name: original
    - labels:
        version: experimental
      name: experimental
	  
	  

===================================================================================

apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  name: reviews-route
  namespace: foo
spec:
  hosts:
  - reviews                                                       # interpreted as reviews.foo.svc.cluster.local
  http:
  - match:
    - uri:
        prefix: "/wpcatalog"           						    #IF
    - uri:
        prefix: "/consumercatalog"  					    #OR
    rewrite:
      uri: "/newcatalog"                 					    #request forward
    route:
    - destination:
        host: reviews              					          # interpreted as reviews.foo.svc.cluster.local
        subset: v2
  - route:                                			              #Catch All Default route ( no match provided)
    - destination:
        host: reviews                    					      # interpreted as reviews.foo.svc.cluster.local
        subset: v1	  
---
apiVersion: networking.istio.io/v1beta1
kind: DestinationRule
metadata:
  name: reviews-destination
  namespace: foo
spec:
  host: reviews                                                  # interpreted as reviews.foo.svc.cluster.local
  subsets:
  - name: v1
    labels:
      version: v1
  - name: v2
    labels:
      version: v2	  
	  
==================================================================	  


apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: ingress-gateway-configuration
spec:
  selector:
    istio: ingressgateway                                                                    # use Istio default gateway implementation
  servers:
  - port:
      number: 80
      name: http
      protocol: HTTP
    hosts:
    - "*"                                                                                            # Domain name of the external website
---
kind: VirtualService
apiVersion: networking.istio.io/v1alpha3
metadata:
  name: fleetman-webapp
  namespace: default
spec:
  hosts:                                                                                           # which incoming host are we applying the proxy rules to???
    - "*"                                                                                            # Copy the value in the gateway hosts - usually a Domain Name
  gateways:
    - ingress-gateway-configuration
  http:
    - route:
        - destination:
            host: fleetman-webapp
            subset: original
          weight: 100
        - destination:
            host: fleetman-webapp
            subset: experimental
          weight: 0
---
kind: DestinationRule
apiVersion: networking.istio.io/v1alpha3
metadata:
  name: fleetman-webapp
  namespace: default
spec:
  host: fleetman-webapp
  subsets:
    - labels:
        version: original
      name: original
    - labels:
        version: experimental
      name: experimental
	  
=====================================================
Dark Release:

kind: VirtualService
apiVersion: networking.istio.io/v1alpha3
metadata:
  name: fleetman-staff-service
  namespace: default
spec:
  hosts:
    - fleetman-staff-service
  http:
    - match:
        - headers:
            x-my-header:
              exact: canary
      fault:
        abort:
          httpStatus: 503
          percentage:
            value: 100
      route:
        - destination:
            host: fleetman-staff-service
            subset: risky
    - route:
        - destination:
            host: fleetman-staff-service
            subset: safe
---
kind: DestinationRule
apiVersion: networking.istio.io/v1alpha3
metadata:
  name: fleetman-staff-service
  namespace: default
spec:
  host: fleetman-staff-service
  subsets:
    - labels:
        version: safe
      name: safe
    - labels:
        version: risky
      name: risky

